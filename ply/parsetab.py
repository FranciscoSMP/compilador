
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'unidad_compilacionrightASSIGNleftEQNEQleftLTLEGTGEleftPLUSMINUSleftTIMESDIVIDErightUMINUSUPLUSASSIGN CHAR CHAR_CONSTANT COMMA DIVIDE ELSE EQ GE GT ID IF INT INTEGER_CONSTANT LBRACE LE LPAREN LT MINUS NEQ PLUS PRINTF PUNTOS RBRACE RETURN RPAREN SCANF SEMICOLON STRING_CONSTANT TIMES VOID WHILEunidad_compilacion : declaracion_externaunidad_compilacion : unidad_compilacion declaracion_externadeclaracion_externa : definicion_funcion\n                           | declaracion_globaldeclaracion_global : variable_declaracion\n                          | funcion_prototipo_declaraciondefinicion_funcion : encabezado_def_funcion cuerpo_funcionencabezado_def_funcion : tipo_retorno ID LPAREN def_parametros RPARENtipo_retorno : tipo\n                    | VOIDtipo : INT\n            | CHARdef_parametros : lista_def_parametrosdef_parametros : VOIDlista_def_parametros : lista_def_parametros COMMA tipo IDlista_def_parametros : tipo IDcuerpo_funcion : LBRACE opcional_declaraciones_locales opcional_lista_statements RBRACEopcional_declaraciones_locales : declaraciones_locales_list\n                                      | emptydeclaraciones_locales_list : declaraciones_locales_list variable_declaraciondeclaraciones_locales_list : variable_declaracionvariable_declaracion : tipo lista_simple_identificadores SEMICOLONlista_simple_identificadores : lista_simple_identificadores COMMA IDlista_simple_identificadores : IDfuncion_prototipo_declaracion : tipo_retorno ID LPAREN declaracion_parametros RPAREN SEMICOLONdeclaracion_parametros : lista_decl_parametrosdeclaracion_parametros : lista_decl_parametros COMMA PUNTOSdeclaracion_parametros : VOIDlista_decl_parametros : lista_decl_parametros COMMA especificacion_decl_parametroslista_decl_parametros : especificacion_decl_parametrosespecificacion_decl_parametros : tipo IDespecificacion_decl_parametros : CHAR TIMES IDopcional_lista_statements : statement_list\n                                 | emptystatement_list : statement_list statementstatement_list : statementstatement : expression_statement\n                 | return_statement\n                 | while_statement\n                 | if_statement\n                 | block_statementexpression_statement : expresion SEMICOLONreturn_statement : RETURN SEMICOLONreturn_statement : RETURN expresion SEMICOLONwhile_statement : WHILE LPAREN expresion RPAREN statementif_statement : IF LPAREN expresion RPAREN statementif_statement : IF LPAREN expresion RPAREN statement ELSE statementblock_statement : LBRACE opcional_declaraciones_locales opcional_lista_statements RBRACEexpresion : ID ASSIGN expresionexpresion : expresion_igualdadexpresion_igualdad : expresion_relacional EQ expresion_relacional\n                          | expresion_relacional NEQ expresion_relacionalexpresion_igualdad : expresion_relacionalexpresion_relacional : expresion_simple LT expresion_simple\n                            | expresion_simple LE expresion_simple\n                            | expresion_simple GT expresion_simple\n                            | expresion_simple GE expresion_simpleexpresion_relacional : expresion_simpleexpresion_simple : expresion_simple PLUS term\n                        | expresion_simple MINUS termexpresion_simple : termterm : term TIMES factor\n            | term DIVIDE factorterm : factorfactor : constantfactor : IDfactor : LPAREN expresion RPARENfactor : PLUS factor %prec UPLUS\n              | MINUS factor %prec UMINUSfactor : callable_name LPAREN lista_expresiones RPARENfactor : callable_name LPAREN RPARENcallable_name : ID\n                     | PRINTF\n                     | SCANFconstant : STRING_CONSTANT\n                | INTEGER_CONSTANT\n                | CHAR_CONSTANTlista_expresiones : lista_expresiones COMMA expresionlista_expresiones : expresionempty :'
    
_lr_action_items = {'VOID':([0,1,2,3,4,6,7,13,14,24,25,68,116,],[10,10,-1,-3,-4,-5,-6,-2,-7,61,-22,-17,-25,]),'INT':([0,1,2,3,4,6,7,13,14,15,20,22,24,25,27,57,68,93,94,116,],[11,11,-1,-3,-4,-5,-6,-2,-7,11,11,-21,11,-22,11,-20,-17,11,11,-25,]),'CHAR':([0,1,2,3,4,6,7,13,14,15,20,22,24,25,27,57,68,93,94,116,],[12,12,-1,-3,-4,-5,-6,-2,-7,12,12,-21,65,-22,12,-20,-17,12,121,-25,]),'$end':([1,2,3,4,6,7,13,14,25,68,116,],[0,-1,-3,-4,-5,-6,-2,-7,-22,-17,-25,]),'LBRACE':([5,15,19,20,21,22,25,27,29,31,32,33,34,35,36,57,67,69,70,71,91,98,123,124,125,130,131,133,134,],[15,-80,27,-18,-19,-21,-22,-80,27,-36,-37,-38,-39,-40,-41,-20,27,-35,-42,-43,-8,-44,-48,27,27,-45,-46,27,-47,]),'ID':([8,9,10,11,12,15,19,20,21,22,23,25,26,27,29,31,32,33,34,35,36,38,40,46,48,57,63,65,67,69,70,71,73,75,76,77,78,79,80,81,82,83,84,87,88,90,96,98,117,120,121,123,124,125,127,130,131,133,134,],[16,18,-10,-11,-12,-80,42,-18,-19,-21,18,-22,66,-80,42,-36,-37,-38,-39,-40,-41,42,42,86,86,-20,95,-12,42,-35,-42,-43,42,42,42,86,86,86,86,86,86,86,86,86,86,42,122,-44,128,129,-12,-48,42,42,42,-45,-46,42,-47,]),'RETURN':([15,19,20,21,22,25,27,29,31,32,33,34,35,36,57,67,69,70,71,98,123,124,125,130,131,133,134,],[-80,38,-18,-19,-21,-22,-80,38,-36,-37,-38,-39,-40,-41,-20,38,-35,-42,-43,-44,-48,38,38,-45,-46,38,-47,]),'WHILE':([15,19,20,21,22,25,27,29,31,32,33,34,35,36,57,67,69,70,71,98,123,124,125,130,131,133,134,],[-80,39,-18,-19,-21,-22,-80,39,-36,-37,-38,-39,-40,-41,-20,39,-35,-42,-43,-44,-48,39,39,-45,-46,39,-47,]),'IF':([15,19,20,21,22,25,27,29,31,32,33,34,35,36,57,67,69,70,71,98,123,124,125,130,131,133,134,],[-80,41,-18,-19,-21,-22,-80,41,-36,-37,-38,-39,-40,-41,-20,41,-35,-42,-43,-44,-48,41,41,-45,-46,41,-47,]),'LPAREN':([15,16,19,20,21,22,25,27,29,31,32,33,34,35,36,38,39,40,41,42,46,48,51,55,56,57,67,69,70,71,73,75,76,77,78,79,80,81,82,83,84,86,87,88,90,98,123,124,125,127,130,131,133,134,],[-80,24,40,-18,-19,-21,-22,-80,40,-36,-37,-38,-39,-40,-41,40,73,40,75,-72,40,40,90,-73,-74,-20,40,-35,-42,-43,40,40,40,40,40,40,40,40,40,40,40,-72,40,40,40,-44,-48,40,40,40,-45,-46,40,-47,]),'PLUS':([15,19,20,21,22,25,27,29,31,32,33,34,35,36,38,40,42,45,46,47,48,49,50,52,53,54,57,67,69,70,71,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,98,100,105,106,107,108,109,110,111,112,114,123,124,125,126,127,130,131,133,134,],[-80,46,-18,-19,-21,-22,-80,46,-36,-37,-38,-39,-40,-41,46,46,-66,83,46,-61,46,-64,-65,-75,-76,-77,-20,46,-35,-42,-43,46,46,46,46,46,46,46,46,46,46,46,-68,-66,46,46,-69,46,-44,-67,83,83,83,83,-59,-60,-62,-63,-71,-48,46,46,-70,46,-45,-46,46,-47,]),'MINUS':([15,19,20,21,22,25,27,29,31,32,33,34,35,36,38,40,42,45,46,47,48,49,50,52,53,54,57,67,69,70,71,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,98,100,105,106,107,108,109,110,111,112,114,123,124,125,126,127,130,131,133,134,],[-80,48,-18,-19,-21,-22,-80,48,-36,-37,-38,-39,-40,-41,48,48,-66,84,48,-61,48,-64,-65,-75,-76,-77,-20,48,-35,-42,-43,48,48,48,48,48,48,48,48,48,48,48,-68,-66,48,48,-69,48,-44,-67,84,84,84,84,-59,-60,-62,-63,-71,-48,48,48,-70,48,-45,-46,48,-47,]),'STRING_CONSTANT':([15,19,20,21,22,25,27,29,31,32,33,34,35,36,38,40,46,48,57,67,69,70,71,73,75,76,77,78,79,80,81,82,83,84,87,88,90,98,123,124,125,127,130,131,133,134,],[-80,52,-18,-19,-21,-22,-80,52,-36,-37,-38,-39,-40,-41,52,52,52,52,-20,52,-35,-42,-43,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-44,-48,52,52,52,-45,-46,52,-47,]),'INTEGER_CONSTANT':([15,19,20,21,22,25,27,29,31,32,33,34,35,36,38,40,46,48,57,67,69,70,71,73,75,76,77,78,79,80,81,82,83,84,87,88,90,98,123,124,125,127,130,131,133,134,],[-80,53,-18,-19,-21,-22,-80,53,-36,-37,-38,-39,-40,-41,53,53,53,53,-20,53,-35,-42,-43,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-44,-48,53,53,53,-45,-46,53,-47,]),'CHAR_CONSTANT':([15,19,20,21,22,25,27,29,31,32,33,34,35,36,38,40,46,48,57,67,69,70,71,73,75,76,77,78,79,80,81,82,83,84,87,88,90,98,123,124,125,127,130,131,133,134,],[-80,54,-18,-19,-21,-22,-80,54,-36,-37,-38,-39,-40,-41,54,54,54,54,-20,54,-35,-42,-43,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-44,-48,54,54,54,-45,-46,54,-47,]),'PRINTF':([15,19,20,21,22,25,27,29,31,32,33,34,35,36,38,40,46,48,57,67,69,70,71,73,75,76,77,78,79,80,81,82,83,84,87,88,90,98,123,124,125,127,130,131,133,134,],[-80,55,-18,-19,-21,-22,-80,55,-36,-37,-38,-39,-40,-41,55,55,55,55,-20,55,-35,-42,-43,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-44,-48,55,55,55,-45,-46,55,-47,]),'SCANF':([15,19,20,21,22,25,27,29,31,32,33,34,35,36,38,40,46,48,57,67,69,70,71,73,75,76,77,78,79,80,81,82,83,84,87,88,90,98,123,124,125,127,130,131,133,134,],[-80,56,-18,-19,-21,-22,-80,56,-36,-37,-38,-39,-40,-41,56,56,56,56,-20,56,-35,-42,-43,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-44,-48,56,56,56,-45,-46,56,-47,]),'RBRACE':([15,19,20,21,22,25,27,28,29,30,31,32,33,34,35,36,57,67,69,70,71,97,98,123,130,131,134,],[-80,-80,-18,-19,-21,-22,-80,68,-33,-34,-36,-37,-38,-39,-40,-41,-20,-80,-35,-42,-43,123,-44,-48,-45,-46,-47,]),'SEMICOLON':([17,18,37,38,42,43,44,45,47,49,50,52,53,54,66,72,85,86,89,92,100,102,103,104,105,106,107,108,109,110,111,112,114,126,],[25,-24,70,71,-66,-50,-53,-58,-61,-64,-65,-75,-76,-77,-23,98,-68,-66,-69,116,-67,-49,-51,-52,-54,-55,-56,-57,-59,-60,-62,-63,-71,-70,]),'COMMA':([17,18,42,43,44,45,47,49,50,52,53,54,60,62,64,66,85,86,89,95,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,119,122,126,128,129,132,],[26,-24,-66,-50,-53,-58,-61,-64,-65,-75,-76,-77,93,94,-30,-23,-68,-66,-69,-16,-67,-49,-51,-52,-54,-55,-56,-57,-59,-60,-62,-63,127,-71,-79,-29,-32,-70,-15,-31,-78,]),'ELSE':([32,33,34,35,36,70,71,98,123,130,131,134,],[-37,-38,-39,-40,-41,-42,-43,-44,-48,-45,133,-47,]),'ASSIGN':([42,],[76,]),'TIMES':([42,47,49,50,52,53,54,65,85,86,89,100,109,110,111,112,114,121,126,],[-66,87,-64,-65,-75,-76,-77,96,-68,-66,-69,-67,87,87,-62,-63,-71,96,-70,]),'DIVIDE':([42,47,49,50,52,53,54,85,86,89,100,109,110,111,112,114,126,],[-66,88,-64,-65,-75,-76,-77,-68,-66,-69,-67,88,88,-62,-63,-71,-70,]),'LT':([42,45,47,49,50,52,53,54,85,86,89,100,109,110,111,112,114,126,],[-66,79,-61,-64,-65,-75,-76,-77,-68,-66,-69,-67,-59,-60,-62,-63,-71,-70,]),'LE':([42,45,47,49,50,52,53,54,85,86,89,100,109,110,111,112,114,126,],[-66,80,-61,-64,-65,-75,-76,-77,-68,-66,-69,-67,-59,-60,-62,-63,-71,-70,]),'GT':([42,45,47,49,50,52,53,54,85,86,89,100,109,110,111,112,114,126,],[-66,81,-61,-64,-65,-75,-76,-77,-68,-66,-69,-67,-59,-60,-62,-63,-71,-70,]),'GE':([42,45,47,49,50,52,53,54,85,86,89,100,109,110,111,112,114,126,],[-66,82,-61,-64,-65,-75,-76,-77,-68,-66,-69,-67,-59,-60,-62,-63,-71,-70,]),'EQ':([42,44,45,47,49,50,52,53,54,85,86,89,100,105,106,107,108,109,110,111,112,114,126,],[-66,77,-58,-61,-64,-65,-75,-76,-77,-68,-66,-69,-67,-54,-55,-56,-57,-59,-60,-62,-63,-71,-70,]),'NEQ':([42,44,45,47,49,50,52,53,54,85,86,89,100,105,106,107,108,109,110,111,112,114,126,],[-66,78,-58,-61,-64,-65,-75,-76,-77,-68,-66,-69,-67,-54,-55,-56,-57,-59,-60,-62,-63,-71,-70,]),'RPAREN':([42,43,44,45,47,49,50,52,53,54,58,59,60,61,62,64,74,85,86,89,90,95,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,118,119,122,126,128,129,132,],[-66,-50,-53,-58,-61,-64,-65,-75,-76,-77,91,92,-13,-14,-26,-30,100,-68,-66,-69,114,-16,124,-67,125,-49,-51,-52,-54,-55,-56,-57,-59,-60,-62,-63,126,-71,-79,-27,-29,-32,-70,-15,-31,-78,]),'PUNTOS':([94,],[118,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'unidad_compilacion':([0,],[1,]),'declaracion_externa':([0,1,],[2,13,]),'definicion_funcion':([0,1,],[3,3,]),'declaracion_global':([0,1,],[4,4,]),'encabezado_def_funcion':([0,1,],[5,5,]),'variable_declaracion':([0,1,15,20,27,],[6,6,22,57,22,]),'funcion_prototipo_declaracion':([0,1,],[7,7,]),'tipo_retorno':([0,1,],[8,8,]),'tipo':([0,1,15,20,24,27,93,94,],[9,9,23,23,63,23,117,120,]),'cuerpo_funcion':([5,],[14,]),'lista_simple_identificadores':([9,23,],[17,17,]),'opcional_declaraciones_locales':([15,27,],[19,67,]),'declaraciones_locales_list':([15,27,],[20,20,]),'empty':([15,19,27,67,],[21,30,21,30,]),'opcional_lista_statements':([19,67,],[28,97,]),'statement_list':([19,67,],[29,29,]),'statement':([19,29,67,124,125,133,],[31,69,31,130,131,134,]),'expression_statement':([19,29,67,124,125,133,],[32,32,32,32,32,32,]),'return_statement':([19,29,67,124,125,133,],[33,33,33,33,33,33,]),'while_statement':([19,29,67,124,125,133,],[34,34,34,34,34,34,]),'if_statement':([19,29,67,124,125,133,],[35,35,35,35,35,35,]),'block_statement':([19,29,67,124,125,133,],[36,36,36,36,36,36,]),'expresion':([19,29,38,40,67,73,75,76,90,124,125,127,133,],[37,37,72,74,37,99,101,102,115,37,37,132,37,]),'expresion_igualdad':([19,29,38,40,67,73,75,76,90,124,125,127,133,],[43,43,43,43,43,43,43,43,43,43,43,43,43,]),'expresion_relacional':([19,29,38,40,67,73,75,76,77,78,90,124,125,127,133,],[44,44,44,44,44,44,44,44,103,104,44,44,44,44,44,]),'expresion_simple':([19,29,38,40,67,73,75,76,77,78,79,80,81,82,90,124,125,127,133,],[45,45,45,45,45,45,45,45,45,45,105,106,107,108,45,45,45,45,45,]),'term':([19,29,38,40,67,73,75,76,77,78,79,80,81,82,83,84,90,124,125,127,133,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,109,110,47,47,47,47,47,]),'factor':([19,29,38,40,46,48,67,73,75,76,77,78,79,80,81,82,83,84,87,88,90,124,125,127,133,],[49,49,49,49,85,89,49,49,49,49,49,49,49,49,49,49,49,49,111,112,49,49,49,49,49,]),'constant':([19,29,38,40,46,48,67,73,75,76,77,78,79,80,81,82,83,84,87,88,90,124,125,127,133,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'callable_name':([19,29,38,40,46,48,67,73,75,76,77,78,79,80,81,82,83,84,87,88,90,124,125,127,133,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'def_parametros':([24,],[58,]),'declaracion_parametros':([24,],[59,]),'lista_def_parametros':([24,],[60,]),'lista_decl_parametros':([24,],[62,]),'especificacion_decl_parametros':([24,94,],[64,119,]),'lista_expresiones':([90,],[113,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> unidad_compilacion","S'",1,None,None,None),
  ('unidad_compilacion -> declaracion_externa','unidad_compilacion',1,'p_unidad_compilacion_single','Analizador_sintactico.py',32),
  ('unidad_compilacion -> unidad_compilacion declaracion_externa','unidad_compilacion',2,'p_unidad_compilacion_list','Analizador_sintactico.py',36),
  ('declaracion_externa -> definicion_funcion','declaracion_externa',1,'p_declaracion_externa','Analizador_sintactico.py',40),
  ('declaracion_externa -> declaracion_global','declaracion_externa',1,'p_declaracion_externa','Analizador_sintactico.py',41),
  ('declaracion_global -> variable_declaracion','declaracion_global',1,'p_declaracion_global','Analizador_sintactico.py',50),
  ('declaracion_global -> funcion_prototipo_declaracion','declaracion_global',1,'p_declaracion_global','Analizador_sintactico.py',51),
  ('definicion_funcion -> encabezado_def_funcion cuerpo_funcion','definicion_funcion',2,'p_definicion_funcion','Analizador_sintactico.py',55),
  ('encabezado_def_funcion -> tipo_retorno ID LPAREN def_parametros RPAREN','encabezado_def_funcion',5,'p_encabezado_def_funcion','Analizador_sintactico.py',59),
  ('tipo_retorno -> tipo','tipo_retorno',1,'p_tipo_retorno','Analizador_sintactico.py',63),
  ('tipo_retorno -> VOID','tipo_retorno',1,'p_tipo_retorno','Analizador_sintactico.py',64),
  ('tipo -> INT','tipo',1,'p_tipo','Analizador_sintactico.py',68),
  ('tipo -> CHAR','tipo',1,'p_tipo','Analizador_sintactico.py',69),
  ('def_parametros -> lista_def_parametros','def_parametros',1,'p_def_parametros_list','Analizador_sintactico.py',73),
  ('def_parametros -> VOID','def_parametros',1,'p_def_parametros_void','Analizador_sintactico.py',77),
  ('lista_def_parametros -> lista_def_parametros COMMA tipo ID','lista_def_parametros',4,'p_lista_def_parametros_multi','Analizador_sintactico.py',82),
  ('lista_def_parametros -> tipo ID','lista_def_parametros',2,'p_lista_def_parametros_single','Analizador_sintactico.py',86),
  ('cuerpo_funcion -> LBRACE opcional_declaraciones_locales opcional_lista_statements RBRACE','cuerpo_funcion',4,'p_cuerpo_funcion','Analizador_sintactico.py',90),
  ('opcional_declaraciones_locales -> declaraciones_locales_list','opcional_declaraciones_locales',1,'p_opcional_declaraciones_locales','Analizador_sintactico.py',94),
  ('opcional_declaraciones_locales -> empty','opcional_declaraciones_locales',1,'p_opcional_declaraciones_locales','Analizador_sintactico.py',95),
  ('declaraciones_locales_list -> declaraciones_locales_list variable_declaracion','declaraciones_locales_list',2,'p_declaraciones_locales_list_multi','Analizador_sintactico.py',101),
  ('declaraciones_locales_list -> variable_declaracion','declaraciones_locales_list',1,'p_declaraciones_locales_list_single','Analizador_sintactico.py',105),
  ('variable_declaracion -> tipo lista_simple_identificadores SEMICOLON','variable_declaracion',3,'p_variable_declaracion','Analizador_sintactico.py',109),
  ('lista_simple_identificadores -> lista_simple_identificadores COMMA ID','lista_simple_identificadores',3,'p_lista_simple_identificadores_multi','Analizador_sintactico.py',113),
  ('lista_simple_identificadores -> ID','lista_simple_identificadores',1,'p_lista_simple_identificadores_single','Analizador_sintactico.py',117),
  ('funcion_prototipo_declaracion -> tipo_retorno ID LPAREN declaracion_parametros RPAREN SEMICOLON','funcion_prototipo_declaracion',6,'p_funcion_prototipo_declaracion','Analizador_sintactico.py',121),
  ('declaracion_parametros -> lista_decl_parametros','declaracion_parametros',1,'p_declaracion_parametros_list','Analizador_sintactico.py',125),
  ('declaracion_parametros -> lista_decl_parametros COMMA PUNTOS','declaracion_parametros',3,'p_declaracion_parametros_ellipsis','Analizador_sintactico.py',129),
  ('declaracion_parametros -> VOID','declaracion_parametros',1,'p_declaracion_parametros_void','Analizador_sintactico.py',133),
  ('lista_decl_parametros -> lista_decl_parametros COMMA especificacion_decl_parametros','lista_decl_parametros',3,'p_lista_decl_parametros_multi','Analizador_sintactico.py',137),
  ('lista_decl_parametros -> especificacion_decl_parametros','lista_decl_parametros',1,'p_lista_decl_parametros_single','Analizador_sintactico.py',141),
  ('especificacion_decl_parametros -> tipo ID','especificacion_decl_parametros',2,'p_especificacion_decl_parametros_simple','Analizador_sintactico.py',145),
  ('especificacion_decl_parametros -> CHAR TIMES ID','especificacion_decl_parametros',3,'p_especificacion_decl_parametros_pointer','Analizador_sintactico.py',149),
  ('opcional_lista_statements -> statement_list','opcional_lista_statements',1,'p_opcional_lista_statements','Analizador_sintactico.py',154),
  ('opcional_lista_statements -> empty','opcional_lista_statements',1,'p_opcional_lista_statements','Analizador_sintactico.py',155),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list_multi','Analizador_sintactico.py',161),
  ('statement_list -> statement','statement_list',1,'p_statement_list_single','Analizador_sintactico.py',165),
  ('statement -> expression_statement','statement',1,'p_statement','Analizador_sintactico.py',169),
  ('statement -> return_statement','statement',1,'p_statement','Analizador_sintactico.py',170),
  ('statement -> while_statement','statement',1,'p_statement','Analizador_sintactico.py',171),
  ('statement -> if_statement','statement',1,'p_statement','Analizador_sintactico.py',172),
  ('statement -> block_statement','statement',1,'p_statement','Analizador_sintactico.py',173),
  ('expression_statement -> expresion SEMICOLON','expression_statement',2,'p_expression_statement','Analizador_sintactico.py',177),
  ('return_statement -> RETURN SEMICOLON','return_statement',2,'p_return_statement_empty','Analizador_sintactico.py',181),
  ('return_statement -> RETURN expresion SEMICOLON','return_statement',3,'p_return_statement_expr','Analizador_sintactico.py',185),
  ('while_statement -> WHILE LPAREN expresion RPAREN statement','while_statement',5,'p_while_statement','Analizador_sintactico.py',189),
  ('if_statement -> IF LPAREN expresion RPAREN statement','if_statement',5,'p_if_statement_then','Analizador_sintactico.py',193),
  ('if_statement -> IF LPAREN expresion RPAREN statement ELSE statement','if_statement',7,'p_if_statement_else','Analizador_sintactico.py',197),
  ('block_statement -> LBRACE opcional_declaraciones_locales opcional_lista_statements RBRACE','block_statement',4,'p_block_statement','Analizador_sintactico.py',201),
  ('expresion -> ID ASSIGN expresion','expresion',3,'p_expresion_assign','Analizador_sintactico.py',212),
  ('expresion -> expresion_igualdad','expresion',1,'p_expresion_passthrough_equality','Analizador_sintactico.py',216),
  ('expresion_igualdad -> expresion_relacional EQ expresion_relacional','expresion_igualdad',3,'p_expresion_igualdad_op','Analizador_sintactico.py',220),
  ('expresion_igualdad -> expresion_relacional NEQ expresion_relacional','expresion_igualdad',3,'p_expresion_igualdad_op','Analizador_sintactico.py',221),
  ('expresion_igualdad -> expresion_relacional','expresion_igualdad',1,'p_expresion_igualdad_passthrough','Analizador_sintactico.py',225),
  ('expresion_relacional -> expresion_simple LT expresion_simple','expresion_relacional',3,'p_expresion_relacional_op','Analizador_sintactico.py',229),
  ('expresion_relacional -> expresion_simple LE expresion_simple','expresion_relacional',3,'p_expresion_relacional_op','Analizador_sintactico.py',230),
  ('expresion_relacional -> expresion_simple GT expresion_simple','expresion_relacional',3,'p_expresion_relacional_op','Analizador_sintactico.py',231),
  ('expresion_relacional -> expresion_simple GE expresion_simple','expresion_relacional',3,'p_expresion_relacional_op','Analizador_sintactico.py',232),
  ('expresion_relacional -> expresion_simple','expresion_relacional',1,'p_expresion_relacional_passthrough','Analizador_sintactico.py',236),
  ('expresion_simple -> expresion_simple PLUS term','expresion_simple',3,'p_expresion_simple_op','Analizador_sintactico.py',240),
  ('expresion_simple -> expresion_simple MINUS term','expresion_simple',3,'p_expresion_simple_op','Analizador_sintactico.py',241),
  ('expresion_simple -> term','expresion_simple',1,'p_expresion_simple_passthrough','Analizador_sintactico.py',245),
  ('term -> term TIMES factor','term',3,'p_term_op','Analizador_sintactico.py',249),
  ('term -> term DIVIDE factor','term',3,'p_term_op','Analizador_sintactico.py',250),
  ('term -> factor','term',1,'p_term_passthrough','Analizador_sintactico.py',254),
  ('factor -> constant','factor',1,'p_factor_constant','Analizador_sintactico.py',258),
  ('factor -> ID','factor',1,'p_factor_id','Analizador_sintactico.py',262),
  ('factor -> LPAREN expresion RPAREN','factor',3,'p_factor_paren_expr','Analizador_sintactico.py',266),
  ('factor -> PLUS factor','factor',2,'p_factor_unary_op','Analizador_sintactico.py',270),
  ('factor -> MINUS factor','factor',2,'p_factor_unary_op','Analizador_sintactico.py',271),
  ('factor -> callable_name LPAREN lista_expresiones RPAREN','factor',4,'p_factor_func_call_with_args','Analizador_sintactico.py',275),
  ('factor -> callable_name LPAREN RPAREN','factor',3,'p_factor_func_call_no_args','Analizador_sintactico.py',279),
  ('callable_name -> ID','callable_name',1,'p_callable_name','Analizador_sintactico.py',283),
  ('callable_name -> PRINTF','callable_name',1,'p_callable_name','Analizador_sintactico.py',284),
  ('callable_name -> SCANF','callable_name',1,'p_callable_name','Analizador_sintactico.py',285),
  ('constant -> STRING_CONSTANT','constant',1,'p_constant','Analizador_sintactico.py',290),
  ('constant -> INTEGER_CONSTANT','constant',1,'p_constant','Analizador_sintactico.py',291),
  ('constant -> CHAR_CONSTANT','constant',1,'p_constant','Analizador_sintactico.py',292),
  ('lista_expresiones -> lista_expresiones COMMA expresion','lista_expresiones',3,'p_lista_expresiones_multi','Analizador_sintactico.py',322),
  ('lista_expresiones -> expresion','lista_expresiones',1,'p_lista_expresiones_single','Analizador_sintactico.py',326),
  ('empty -> <empty>','empty',0,'p_empty','Analizador_sintactico.py',331),
]
